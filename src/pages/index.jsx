import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../../styles/Home.module.css";
import { connectEthereum } from "../ethereum";
import styled from "styled-components";
import Panel from "../components/Panel";
import { ethers } from "ethers";

export const Container = styled.div`
  width: 100vw;
  height: 100vh;
  background-color: yellowgreen;
  display: flex;
  flex-direction: column;
`;

export const Header = styled.div`
  min-height: 70px;
  max-height: 70px;
  background-color: purple;
  padding: 10px;

  color: white;
  font-size: 17px;
  font-family: monospace, Arial, Helvetica, sans-serif;

  div {
    display: inline-block;
    margin: 5px;
    padding: 0;
  }
`;

export const Main = styled.div`
  height: 100vh;
  background-color: black;
  font-family: monospace, Impact, Haettenschweiler, "Arial Narrow Bold",
    sans-serif;
  color: white;

  display: flex;
  justify-content: center;
  flex-wrap: wrap;
`;

export default function Home() {
  const [info, setInfo] = useState({});
  const [visible, setVisible] = useState(false);

  useEffect(() => {
    const done = async () => {
      if (!window.ethereum) {
        setVisible(false);
        // alert("PLEASE, ENABLE METAMASK!");
        // add modal
        return;
      } else {
        setVisible(true);
      }
      try {
        const [account, netId, contract, balance, balanceWeth] =
          await connectEthereum();
        const provider = new ethers.providers.Web3Provider(window.ethereum);

        setInfo((info) => ({
          ...info,
          account: account,
          balance: parseInt(balance),
          contract: contract,
          netId: netId,
          balanceWeth: parseInt(balanceWeth),
        }));

        contract.once("evDeposit", async () => {
          // do something
          const balance = await provider.getBalance(account);
          const balanceWeth = await contract.balanceOf(account);
          // window.location.reload()
          setInfo((info) => ({
            ...info,
            balance: parseInt(balance),
            balanceWeth: parseInt(balanceWeth),
          }));
        });

        contract.once("evWithdraw", async () => {
          // do something
          const balance = await provider.getBalance(account);
          const balanceWeth = await contract.balanceOf(account);
          // window.location.reload()
          setInfo((info) => ({
            ...info,
            balance: parseInt(balance),
            balanceWeth: parseInt(balanceWeth),
          }));
        });

        //
      } catch (error) {
        console.error(error);
        setVisible(false);
      }
      //
    };

    done();
    //
  }, []);

  return (
    <Container className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header>
        <div>Address: {info.account} | </div>
        <div>Balance: {info.balance} | </div>
        <div>Balance WETH: {info.balanceWeth} | </div>
        <div>NetId: {info.netId}</div>
      </Header>
      {visible ? (
        <Main>
          <Panel info={info} type={1}></Panel>
          <Panel info={info} type={2}></Panel>
        </Main>
      ) : (
        <div
          style={{
            width: "100vw",
            height: "100vh",
            backgroundColor: "black",
            color: "white",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            fontFamily: "monospace",
            fontSize: "30px",
          }}
        >
          Please, enable Metamask with the Mumbai network and refresh the
          pageüå±‚úåÔ∏è
        </div>
      )}
    </Container>
  );
}
